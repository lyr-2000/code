<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>准备工作 on 凌冬的代码博客站</title>
    <link>https://lyr-2000.github.io/code/post/</link>
    <description>Recent content in 准备工作 on 凌冬的代码博客站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>LYR</copyright>
    <lastBuildDate>Wed, 11 May 2022 20:02:48 +0800</lastBuildDate><atom:link href="https://lyr-2000.github.io/code/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vim其他用法</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/vim%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/vim%E5%85%B6%E4%BB%96%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 25 Sep 2022 22:27:08 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/vim%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/vim%E5%85%B6%E4%BB%96%E7%94%A8%E6%B3%95/</guid>
      <description>vim 其他需要了解的用法 text Object 高效编辑 word w iw ,inner word aw , arround word paragraph ip,inner paragraph is ,inner sentence vim sourround 插件 快速单引号改双引号 或者 括号等操作 ysiw + 符号， 单词添加上 对应符号 cs +符号1</description>
    </item>
    
    <item>
      <title>项目开发相关</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Mon, 19 Sep 2022 19:46:11 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/</guid>
      <description>项目开发 shell 的2种工作模式 交换模式 非交互模式 1 /bin/bash -c &amp;#34;ls -l&amp;#34; 涉及到的系统调用 pipe() : 创建2个文件描述符 fd[0] 可读，fd[1]可写 fork() : 创建子进程， fd[1]继</description>
    </item>
    
    <item>
      <title>并发原语</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/sync/%E5%B9%B6%E5%8F%91%E5%8E%9F%E8%AF%AD/</link>
      <pubDate>Thu, 04 Aug 2022 22:10:35 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/sync/%E5%B9%B6%E5%8F%91%E5%8E%9F%E8%AF%AD/</guid>
      <description>atomic.Value 参考 参考博客 Go的sync/atomic包提供了原子操作，支持的数据类型包括： int32, int64, uint32, uint64, uintptr, unsafe.Pointer 1 若需要扩大原子操作的适用范围，可以使用atom</description>
    </item>
    
    <item>
      <title>开发环境安装</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rust/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</link>
      <pubDate>Mon, 01 Aug 2022 22:47:47 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rust/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</guid>
      <description>安装 rust 无论使用何种系统, 均可以根据 Rust 官方网站提供的 rustup-init 工具完成 Rust 的安装. rustup-init 下载地址: https://www.rust-lang.org/zh-CN/tools/install. 网站会自动识别你的操作系统并给出提示, 遵循网站提示一步一</description>
    </item>
    
    <item>
      <title>基本数据类型</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rust/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 01 Aug 2022 22:45:16 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rust/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>rust介绍 rust 能做什么？ 区块链 系统层面 编译器虚拟机 rust 基本数据类型学习 复合类型 元组 1 2 3 4 5 6 7 8 fn main() { let a :i32 = 10; let b:char = &amp;#39;A&amp;#39;; let tuple = (a,b); println!(&amp;#34;key{},value={}&amp;#34;,tuple.0,tuple.1); } 定义数组</description>
    </item>
    
    <item>
      <title>yield生成器</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E8%AF%AD%E6%B3%95/yield%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Wed, 18 May 2022 11:40:28 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E8%AF%AD%E6%B3%95/yield%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>yield 生成器语法 1 2 3 4 5 6 7 8 9 10 def fab(max): n, a, b = 0, 0, 1 while n &amp;lt; max: yield b # 使用 yield # print b a, b = b, a + b n = n + 1 for n in fab(5): print n 通过这个 yield ,我们就不需要在 while</description>
    </item>
    
    <item>
      <title>学习网站</title>
      <link>https://lyr-2000.github.io/code/post/notes/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/</link>
      <pubDate>Wed, 18 May 2022 00:25:33 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/notes/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/</guid>
      <description>学习网站收集 学前端 学前端2</description>
    </item>
    
    <item>
      <title>函数</title>
      <link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E8%AF%AD%E6%B3%95/%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 18 May 2022 00:24:40 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E8%AF%AD%E6%B3%95/%E5%87%BD%E6%95%B0/</guid>
      <description>函数定义 参考学习教程 脚本中函数定义要放在函数调用之前，因为这是解释型语言 1 2 3 4 def say(); print(&amp;#34;hello world&amp;#34;) say() # say调用放在定义之后 注释 名字 描述 单行注释 #, 注意</description>
    </item>
    
    <item>
      <title>vscode代码模板功能</title>
      <link>https://lyr-2000.github.io/code/post/notes/vscode%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Wed, 11 May 2022 23:28:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/notes/vscode%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF%E5%8A%9F%E8%83%BD/</guid>
      <description>vscode代码模板功能 ​ 代码片段快捷键 学算法记录 labuladong网站 markdown nice 网站 可以美化代码 中文文档排版指南 参考文章 https://www.bilibili.com/video/BV1no4y1k7YT/?spm_id_from=333.788.recommend_more_video.-1</description>
    </item>
    
    <item>
      <title>准备工作</title>
      <link>https://lyr-2000.github.io/code/post/docs/%E5%B8%B8%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/</link>
      <pubDate>Wed, 11 May 2022 20:02:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/code/post/docs/%E5%B8%B8%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/</guid>
      <description>shell 文档网站 awk 使用教程</description>
    </item>
    
  </channel>
</rss>
