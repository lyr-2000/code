<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>排序 on 凌冬的代码博客站</title><link>https://lyr-2000.github.io/code/tags/%E6%8E%92%E5%BA%8F/</link><description>Recent content in 排序 on 凌冬的代码博客站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>LYR</copyright><lastBuildDate>Wed, 11 May 2022 20:02:48 +0800</lastBuildDate><atom:link href="https://lyr-2000.github.io/code/tags/%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>lc.1288.删除被覆盖的区间</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/lc.1288.%E5%88%A0%E9%99%A4%E8%A2%AB%E8%A6%86%E7%9B%96%E7%9A%84%E5%8C%BA%E9%97%B4/</link><pubDate>Sun, 18 Sep 2022 19:30:19 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/lc.1288.%E5%88%A0%E9%99%A4%E8%A2%AB%E8%A6%86%E7%9B%96%E7%9A%84%E5%8C%BA%E9%97%B4/</guid><description>1288. 删除被覆盖区间 Description Difficulty: 中等 Related Topics: 数组 , 排序 给你一个区间列表，请你删除列表中被其他区间所覆盖的区间。 只有当 c &amp;lt;= a 且 b &amp;lt;= d 时，我们才认为区间 [a,b) 被区间</description></item><item><title>lc.56.合并区间</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/lc.56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</link><pubDate>Sun, 18 Sep 2022 18:36:52 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/lc.56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</guid><description>56. 合并区间 Description Difficulty: 中等 Related Topics: 数组 , 排序 以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该</description></item><item><title>桶排序</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/%E6%A1%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Sun, 18 Sep 2022 14:43:24 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/%E6%A1%B6%E6%8E%92%E5%BA%8F/</guid><description>桶排序 计数排序 统计每个元素的个数，然后复制到数组上。 基数排序 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include &amp;lt;iostream&amp;gt;</description></item><item><title>快速排序代码模板</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF/</link><pubDate>Thu, 15 Sep 2022 21:14:27 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF/</guid><description>快速排序代码模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 void quick_sort(int *arr,int l,int r) { if (l&amp;gt;=r) return ; int x = arr[l]; int bl = l,br = r; while(l&amp;lt;r) { while(l &amp;lt; r &amp;amp;&amp;amp; arr[r] &amp;gt;= x) r--; //&amp;gt;= if (l &amp;lt; r</description></item></channel></rss>